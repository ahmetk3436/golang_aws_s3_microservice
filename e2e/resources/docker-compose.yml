version: "3.9"
services:
  aws_s3_job:
    depends_on:
      mysql:
        condition: service_healthy
    build: ../../aws_s3_job/
    environment:
      AWS_REGION: "AWS_REGION"
      AWS_ACCESS_KEY_ID: "AWS_ACCESS_KEY_ID"
      AWS_BUCKET_NAME: "AWS_BUCKET_NAME"
      AWS_SECRET_ACCESS_KEY: "AWS_SECRET_ACCESS_KEY"
      DATA_SOURCE_URL: "root:golang-aws-s3-backend-task@tcp(mysql:3306)/golang-aws-s3?charset=utf8mb4&parseTime=True&loc=Local"
  rest_api_microservice:
    depends_on:
      mysql:
        condition: service_healthy
      jaeger:
        condition: service_started
      aws_s3_job:
        condition: service_completed_successfully
    build: ../../rest_api_microservice/
    ports:
      - "9999:9999"
    environment:
      APPLICATION_PORT: 9999
      DATA_SOURCE_URL: "root:golang-aws-s3-backend-task@tcp(mysql:3306)/golang-aws-s3?charset=utf8mb4&parseTime=True&loc=Local"
      DATA_JAEGER_URL: "http://jaeger:14268/api/traces"
      REST_API_MICROSERVICE_SERVICE_URL: "rest_api_microservice:9999"
  mysql:
    image: "mysql:8.0.30"
    environment:
      MYSQL_ROOT_PASSWORD: "golang-aws-s3-backend-task"
    volumes:
      - "./init.sql:/docker-entrypoint-initdb.d/init.sql"
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-uroot", "-pgolang-aws-s3-backend-task"]
      interval: 5s
      timeout: 5s
      retries: 20
  jaeger:
    image: "jaegertracing/all-in-one:latest"
    container_name: jaeger
    restart: always
    ports:
      - "5775:5775"
      - "5778:5778"
      - "6831:6831"
      - "6832:6832"
      - "9411:9411"
      - "14268:14268"
      - "14269:14269"
      - "16686:16686"